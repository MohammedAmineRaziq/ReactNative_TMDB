{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { EvilIcons } from '@expo/vector-icons';\nimport Constants from 'expo-constants';\nimport { fetchMovies } from \"../services/services\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screen = Dimensions.get('screen');\n\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      movies = _useState2[0],\n      setMovies = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchTerm = _useState4[0],\n      setSearchTerm = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchNow = _useState6[0],\n      setSearchNow = _useState6[1];\n\n  useEffect(function () {\n    fetchMovies(searchTerm, movies).then(function (data) {\n      setMovies(data);\n    });\n  }, [searchNow]);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsxs(View, {\n        style: styles.inputCard,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: 'search movies',\n          value: searchTerm,\n          onChangeText: function onChangeText(text) {\n            return setSearchTerm(text);\n          },\n          onChange: function onChange() {\n            return setSearchNow(!searchNow);\n          }\n        }), _jsx(EvilIcons, {\n          name: 'search',\n          size: 20,\n          color: \"black\",\n          style: {\n            alignSelf: 'center',\n            marginHorizontal: 20\n          }\n        })]\n      }), _jsx(View, {\n        style: styles.movieListCard,\n        children: _jsx(FlatList, {\n          data: movies,\n          numColumns: 1,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(View, {\n              children: _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  navigation.navigate('Movie', {\n                    movie: item\n                  });\n                },\n                children: _jsxs(View, {\n                  style: styles.movieCard,\n                  children: [_jsx(Image, {\n                    style: styles.MovieImage,\n                    source: {\n                      uri: \"http://image.tmdb.org/t/p/w780\" + item.poster_path\n                    }\n                  }), _jsxs(View, {\n                    style: {\n                      flex: 3,\n                      height: 125\n                    },\n                    children: [_jsxs(View, {\n                      style: {\n                        flexDirection: 'row'\n                      },\n                      children: [_jsx(Text, {\n                        style: {\n                          fontWeight: 'bold',\n                          color: 'white',\n                          width: screen.width * 0.5,\n                          paddingLeft: 10,\n                          paddingVertical: 5\n                        },\n                        children: item.title\n                      }), _jsx(Text, {\n                        style: {\n                          fontWeight: 'bold',\n                          color: 'green',\n                          marginVertical: 5\n                        },\n                        children: item.vote_average\n                      })]\n                    }), _jsx(Text, {\n                      style: {\n                        fontWeight: 'bold',\n                        color: 'white',\n                        width: screen.width * 0.5,\n                        paddingLeft: 10,\n                        paddingTop: 25,\n                        paddingBottom: 5\n                      },\n                      children: item.release_date\n                    })]\n                  })]\n                })\n              })\n            });\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight\n  },\n  MovieImage: {\n    flex: 1,\n    width: window.width,\n    borderRadius: 10,\n    height: window.height\n  },\n  inputCard: {\n    position: 'absolute',\n    margin: 20,\n    left: 10,\n    right: 10,\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    borderRadius: 5,\n    zIndex: 100\n  },\n  input: {\n    padding: 10,\n    flex: 1\n  },\n  movieCard: {\n    backgroundColor: '#212121',\n    borderColor: '#212121',\n    flex: 1,\n    margin: 5,\n    borderRadius: 10,\n    flexDirection: 'row',\n    borderWidth: 5\n  },\n  movieListCard: {\n    top: screen.height * 0.10\n  }\n});","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Bureau/Expo/MovieApp/screens/HomeScreen.js"],"names":["React","useEffect","useState","EvilIcons","Constants","fetchMovies","screen","Dimensions","get","HomeScreen","navigation","movies","setMovies","searchTerm","setSearchTerm","searchNow","setSearchNow","then","data","styles","container","inputCard","input","text","alignSelf","marginHorizontal","movieListCard","item","navigate","movie","movieCard","MovieImage","uri","poster_path","flex","height","flexDirection","fontWeight","color","width","paddingLeft","paddingVertical","title","marginVertical","vote_average","paddingTop","paddingBottom","release_date","StyleSheet","create","statusBarHeight","window","borderRadius","position","margin","left","right","backgroundColor","alignItems","zIndex","padding","borderColor","borderWidth","top"],"mappings":"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","sourcesContent":["/* screen/HomeScreen.js */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TextInput,\r\n  Dimensions,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { EvilIcons } from '@expo/vector-icons';\r\nimport Constants from 'expo-constants';\r\nimport {fetchMovies} from \"../services/services\";\r\n\r\nconst screen = Dimensions.get('screen');\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchNow, setSearchNow] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchMovies(searchTerm, movies).then((data) => {\r\n      setMovies(data);\r\n    });\r\n  }, [searchNow]);\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <View style={styles.inputCard}>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder={'search movies'}\r\n            value={searchTerm}\r\n            onChangeText={(text) => setSearchTerm(text)}\r\n            onChange={()=>setSearchNow(!searchNow)}\r\n          />\r\n          <EvilIcons\r\n              name={'search'}\r\n              size={20}\r\n              color=\"black\"\r\n              style={{ alignSelf: 'center', marginHorizontal: 20 }}\r\n            />\r\n        </View>\r\n\r\n        <View style={styles.movieListCard}>\r\n          <FlatList\r\n            data={movies}\r\n            numColumns={1}\r\n            renderItem={({ item}) => {\r\n              return (\r\n                <View >\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      navigation.navigate('Movie', { movie: item });\r\n                    }}>\r\n                    <View style={styles.movieCard}>\r\n                      <Image style={styles.MovieImage}\r\n                        source={{\r\n                          uri: `http://image.tmdb.org/t/p/w780${item.poster_path}`,\r\n                        }}\r\n                      />\r\n                      <View style={{flex:3,height:125}}>\r\n                        <View style={{flexDirection:'row'}}>\r\n                          <Text style={{fontWeight:'bold',color: 'white', width: screen.width * 0.5,paddingLeft: 10,paddingVertical:5}}>{item.title}</Text>\r\n                          <Text style={{fontWeight:'bold',color: 'green',marginVertical:5}}>{item.vote_average}</Text>\r\n                        </View> \r\n                        <Text style={{fontWeight:'bold',color: 'white', width: screen.width * 0.5,paddingLeft: 10,paddingTop:25,paddingBottom:5}}>{item.release_date}</Text>\r\n                        \r\n                      </View>\r\n                    </View>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              );\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: Constants.statusBarHeight,\r\n   \r\n  },\r\n  MovieImage: {  \r\n    flex:1 ,\r\n    width:window.width ,\r\n    borderRadius:10,\r\n    height: window.height,\r\n  },\r\n  inputCard: {\r\n    position: 'absolute',\r\n    margin: 20,\r\n    left: 10,\r\n    right: 10,\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    borderRadius: 5,\r\n    zIndex: 100,\r\n  },\r\n  input: {\r\n    padding: 10,\r\n    flex: 1,\r\n  },\r\n  movieCard: {\r\n    backgroundColor: '#212121',\r\n    borderColor: '#212121',\r\n    flex:1,\r\n    margin: 5,\r\n    borderRadius:10,\r\n    flexDirection: 'row',\r\n    borderWidth: 5,\r\n  },\r\n  movieListCard: {\r\n    top: screen.height * 0.10,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}