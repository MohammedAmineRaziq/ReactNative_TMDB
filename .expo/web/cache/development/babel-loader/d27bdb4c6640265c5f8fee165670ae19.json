{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport { URL, API_KEY } from \"../config/config\";\nexport var fetchMovies = function _callee(search) {\n  var response, _response;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('fetch movies', search);\n\n          if (search) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(axios.get(URL + \"movie/upcoming?api_key=\" + API_KEY));\n\n        case 4:\n          response = _context.sent;\n          return _context.abrupt(\"return\", _toConsumableArray(response.data.results));\n\n        case 8:\n          console.log('in else');\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(axios.get(URL + \"search/movie?api_key=\" + API_KEY + \"&language=en-US&query=\" + search));\n\n        case 11:\n          _response = _context.sent;\n          return _context.abrupt(\"return\", _toConsumableArray(_response.data.results));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var fetchCredits = function _callee2(id) {\n  var response, director, credits;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(URL + \"movie/\" + id + \"/credits?api_key=\" + API_KEY));\n\n        case 2:\n          response = _context2.sent;\n          director = response.data.crew.find(function (dir) {\n            return dir.known_for_department === 'Directing';\n          });\n          credits = response.data;\n          return _context2.abrupt(\"return\", {\n            director: director,\n            credits: credits\n          });\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Bureau/Expo/MovieApp/services/services.js"],"names":["axios","URL","API_KEY","fetchMovies","search","console","log","get","response","data","results","fetchCredits","id","director","crew","find","dir","known_for_department","credits"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd;AACA,OAAO,IAAMC,WAAW,GAAG,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAA5B;;AADyB,cAEpBA,MAFoB;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAGAJ,KAAK,CAACO,GAAN,CAAaN,GAAb,+BAA0CC,OAA1C,CAHA;;AAAA;AAGjBM,UAAAA,QAHiB;AAAA,8DAIZA,QAAQ,CAACC,IAAT,CAAcC,OAJF;;AAAA;AAMvBL,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AANuB;AAAA,2CAOAN,KAAK,CAACO,GAAN,CAClBN,GADkB,6BACSC,OADT,8BACyCE,MADzC,CAPA;;AAAA;AAOjBI,UAAAA,SAPiB;AAAA,8DAUZA,SAAQ,CAACC,IAAT,CAAcC,OAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;AAaP,OAAO,IAAMC,YAAY,GAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHZ,KAAK,CAACO,GAAN,CAClBN,GADkB,cACNW,EADM,yBACgBV,OADhB,CADG;;AAAA;AACpBM,UAAAA,QADoB;AAKpBK,UAAAA,QALoB,GAKTL,QAAQ,CAACC,IAAT,CAAcK,IAAd,CAAmBC,IAAnB,CACf,UAACC,GAAD;AAAA,mBAASA,GAAG,CAACC,oBAAJ,KAA6B,WAAtC;AAAA,WADe,CALS;AAQpBC,UAAAA,OARoB,GAQVV,QAAQ,CAACC,IARC;AAAA,4CASnB;AAAEI,YAAAA,QAAQ,EAAEA,QAAZ;AAAsBK,YAAAA,OAAO,EAAEA;AAA/B,WATmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB","sourcesContent":["import axios from 'axios';\r\nimport { URL, API_KEY } from '../config/config';\r\nexport const fetchMovies = async (search) => {\r\n  console.log('fetch movies', search);\r\n  if (!search) {\r\n    const response = await axios.get(`${URL}movie/upcoming?api_key=${API_KEY}`);\r\n    return [...response.data.results];\r\n  } else {\r\n    console.log('in else');\r\n    const response = await axios.get(\r\n      `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${search}`\r\n    );\r\n    return [...response.data.results];\r\n  }\r\n};\r\nexport const fetchCredits = async (id) => {\r\n  const response = await axios.get(\r\n    `${URL}movie/${id}/credits?api_key=${API_KEY}`\r\n  );\r\n\r\n  const director = response.data.crew.find(\r\n    (dir) => dir.known_for_department === 'Directing'\r\n  );\r\n  const credits = response.data;\r\n  return { director: director, credits: credits };\r\n};"]},"metadata":{},"sourceType":"module"}