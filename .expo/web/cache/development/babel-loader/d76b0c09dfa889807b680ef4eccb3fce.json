{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Constants from 'expo-constants';\nimport ProfileThumb from \"../components/ProfileThumb\";\nimport BackButton from \"../components/BackButton\";\nimport MovieDetails from \"../Components/MovieDetails\";\nvar screen = Dimensions.get('window');\nimport { fetchCredits } from \"../services/services\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function MovieScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      credits = _useState2[0],\n      setCredits = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      director = _useState4[0],\n      setDirector = _useState4[1];\n\n  var movie = route.params.movie;\n  useEffect(function () {\n    fetchCredits(movie.id).then(function (data) {\n      setCredits(data.credits);\n      setDirector(data.director);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(BackButton, {\n        navigation: navigation\n      }), _jsx(Image, {\n        source: {\n          uri: \"http://image.tmdb.org/t/p/w780\" + (movie == null ? void 0 : movie.poster_path)\n        },\n        style: styles.banner\n      }), _jsx(MovieDetails, {\n        movie: movie,\n        director: director\n      })]\n    }), _jsx(View, {\n      style: styles.credit,\n      children: _jsxs(_Fragment, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: \"Cast :\"\n        }), credits && _jsx(FlatList, {\n          data: credits.cast,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(ProfileThumb, {\n              item: item\n            });\n          },\n          horizontal: true\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  banner: {\n    width: window.width,\n    height: 400\n  },\n  credit: {\n    flex: 1,\n    padding: 10\n  },\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#212121'\n  },\n  title: {\n    margin: 2,\n    marginVertical: 4,\n    color: 'white',\n    fontSize: 12,\n    fontStyle: 'bold',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Bureau/Expo/MovieApp/screens/MovieScreen.js"],"names":["React","useEffect","useState","Constants","ProfileThumb","BackButton","MovieDetails","screen","Dimensions","get","fetchCredits","MovieScreen","navigation","route","credits","setCredits","director","setDirector","movie","params","id","then","data","styles","container","uri","poster_path","banner","credit","title","cast","item","StyleSheet","create","width","window","height","flex","padding","paddingTop","statusBarHeight","backgroundColor","margin","marginVertical","color","fontSize","fontStyle","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  Dimensions,\r\n  FlatList,\r\n} from 'react-native';\r\n\r\nimport Constants from 'expo-constants';\r\nimport ProfileThumb from '../components/ProfileThumb';\r\nimport BackButton from '../components/BackButton';\r\nimport MovieDetails from '../Components/MovieDetails';\r\nconst screen = Dimensions.get('window');\r\nimport { fetchCredits } from '../services/services';\r\n\r\nexport default function MovieScreen({ navigation, route }) {\r\n  const [credits, setCredits] = useState(null);\r\n  const [director, setDirector] = useState('');\r\n  const { movie } = route.params;\r\n\r\n  useEffect(() => {\r\n    fetchCredits(movie.id).then((data) => {\r\n      setCredits(data.credits);\r\n      setDirector(data.director);\r\n    });\r\n  }, []);\r\n\r\n  return  (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <BackButton navigation={navigation} />\r\n        <Image\r\n          source={{\r\n            uri: `http://image.tmdb.org/t/p/w780${movie?.poster_path}`,\r\n          }}\r\n          style={styles.banner}\r\n        />\r\n      <MovieDetails movie={movie} director={director} />\r\n      </View> \r\n      <View style={styles.credit}>\r\n        <>\r\n          <Text style={styles.title}>Cast :</Text>\r\n          {credits && (\r\n            <FlatList\r\n              data={credits.cast}\r\n              renderItem={({ item }) => <ProfileThumb item={item} />}\r\n              horizontal\r\n            />\r\n          )}\r\n        </>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  banner: { width: window.width, height: 400 },\r\n  credit: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#212121',\r\n  },\r\n  title: {\r\n    margin:2,\r\n    marginVertical:4,\r\n    color: 'white',\r\n    fontSize: 12,\r\n    fontStyle:'bold',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}