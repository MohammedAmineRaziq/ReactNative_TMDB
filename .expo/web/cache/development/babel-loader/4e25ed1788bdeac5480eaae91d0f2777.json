{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport MovieScreen from \"./screens/MovieScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      headerMode: \"none\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Movie\",\n        component: MovieScreen\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Bureau/Expo/MovieApp/App.js"],"names":["React","createStackNavigator","NavigationContainer","HomeScreen","MovieScreen","Stack","App"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,OAAOC,UAAP;AACA,OAAOC,WAAP;;;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AAaA,eAAe,SAASK,GAAT,GAAe;AAC5B,SACE,KAAC,mBAAD;AAAA,cACE,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,UAAU,EAAC,MAA5B;AAAA,iBACE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA2B,QAAA,SAAS,EAAEH;AAAtC,QADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEC;AAAtC,QAFF;AAAA;AADF,IADF;AAQD","sourcesContent":["/*App.js*/\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { Text } from 'react-native';\nimport HomeScreen from './screens/HomeScreen';\nimport MovieScreen from './screens/MovieScreen';\n\nconst Stack = createStackNavigator();\n/** \n * 1. In our <Stack.Navigator> we have prop called headerMode=\"none\",\n * it specifies that we don't want the header bar in our app, thus the value\n * \"none\".\n * 2. In our <Stack.Screen> we have two props, \"name\" and  \"component\",\n * \"name\" prop's value is used whenever we will be navigating from \n * one screen to another.\n * For example, if want to navigate to MovieScreen from HomeScreen then \n * we can do that using navigation.navigate(\"Movie\"), as you can see, \n * we are using, the value of the name prop that we used while setting \n * up the Stack Screen for MovieScreen component. \n*/\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator headerMode=\"none\">\n        <Stack.Screen name=\"Home\"  component={HomeScreen} />\n        <Stack.Screen name=\"Movie\" component={MovieScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}