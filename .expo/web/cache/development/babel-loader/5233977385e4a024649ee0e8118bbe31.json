{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Constants from 'expo-constants';\nimport BackButton from \"../components/GoBackButton\";\nimport Details from \"../components/Details\";\nvar screen = Dimensions.get('window');\nimport { fetchCredits } from \"../services/services.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MovieScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      credits = _useState2[0],\n      setCredits = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      director = _useState6[0],\n      setDirector = _useState6[1];\n\n  var movie = route.params.movie;\n  useEffect(function () {\n    setLoading(true);\n    fetchCredits(movie.id).then(function (data) {\n      setCredits(data.credits);\n      setDirector(data.director);\n      setLoading(false);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      children: [_jsx(BackButton, {\n        navigation: navigation\n      }), _jsx(Image, {\n        source: {\n          uri: \"http://image.tmdb.org/t/p/w780\" + (movie == null ? void 0 : movie.poster_path)\n        },\n        style: styles.banner\n      }), _jsx(Details, {\n        movie: movie,\n        director: director\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  banner: {\n    width: window.width,\n    height: 500\n  },\n  container: {\n    flex: 1,\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#212121'\n  }\n});","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Bureau/Expo/MovieApp/screens/MovieScreen.js"],"names":["React","useEffect","useState","Constants","BackButton","Details","screen","Dimensions","get","fetchCredits","MovieScreen","navigation","route","credits","setCredits","loading","setLoading","director","setDirector","movie","params","id","then","data","styles","container","uri","poster_path","banner","StyleSheet","create","width","window","height","flex","paddingTop","statusBarHeight","backgroundColor"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;;AAWA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AACA,IAAMC,MAAM,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAf;AACA,SAASC,YAAT;;;AAEA,eAAe,SAASC,WAAT,OAA4C;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;;AACzD,kBAA8BV,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOW,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BZ,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOa,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAgCd,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOe,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAQC,KAAR,GAAkBP,KAAK,CAACQ,MAAxB,CAAQD,KAAR;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAP,IAAAA,YAAY,CAACU,KAAK,CAACE,EAAP,CAAZ,CAAuBC,IAAvB,CAA4B,UAACC,IAAD,EAAU;AACpCT,MAAAA,UAAU,CAACS,IAAI,CAACV,OAAN,CAAV;AACAK,MAAAA,WAAW,CAACK,IAAI,CAACN,QAAN,CAAX;AACAD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA,cACE,MAAC,IAAD;AAAA,iBACE,KAAC,UAAD;AAAY,QAAA,UAAU,EAAEd;AAAxB,QADF,EAEE,KAAC,KAAD;AACE,QAAA,MAAM,EAAE;AACNe,UAAAA,GAAG,sCAAmCP,KAAnC,oBAAmCA,KAAK,CAAEQ,WAA1C;AADG,SADV;AAIE,QAAA,KAAK,EAAEH,MAAM,CAACI;AAJhB,QAFF,EAQE,KAAC,OAAD;AAAS,QAAA,KAAK,EAAET,KAAhB;AAAuB,QAAA,QAAQ,EAAEF;AAAjC,QARF;AAAA;AADF,IADF;AAcD;AAED,IAAMO,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,MAAM,EAAE;AAAEG,IAAAA,KAAK,EAAEC,MAAM,CAACD,KAAhB;AAAuBE,IAAAA,MAAM,EAAE;AAA/B,GADuB;AAE/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAC,CADI;AAETC,IAAAA,UAAU,EAAEhC,SAAS,CAACiC,eAFb;AAGTC,IAAAA,eAAe,EAAE;AAHR;AAFoB,CAAlB,CAAf","sourcesContent":["/* screen/MovieScreen.js */\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Image,\r\n  TextInput,\r\n  Dimensions,\r\n  FlatList,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport Constants from 'expo-constants';\r\nimport BackButton from '../components/GoBackButton';\r\nimport Details from '../components/Details';\r\nconst screen = Dimensions.get('window');\r\nimport { fetchCredits } from \"../services/services.js\";\r\n\r\nexport default function MovieScreen({ navigation, route }) {\r\n  const [credits, setCredits] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [director, setDirector] = useState('');\r\n  const { movie } = route.params;\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetchCredits(movie.id).then((data) => {\r\n      setCredits(data.credits);\r\n      setDirector(data.director);\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View>\r\n        <BackButton navigation={navigation} />\r\n        <Image\r\n          source={{\r\n            uri: `http://image.tmdb.org/t/p/w780${movie?.poster_path}`,\r\n          }}\r\n          style={styles.banner}\r\n        />\r\n        <Details movie={movie} director={director} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  banner: { width: window.width, height: 500 },\r\n  container: {\r\n    flex:1,\r\n    paddingTop: Constants.statusBarHeight,\r\n    backgroundColor: '#212121',\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}